<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qQAAAABJRU5ErkJggg==
</value>
  </data>
</root>