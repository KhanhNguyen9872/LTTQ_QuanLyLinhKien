<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAXgBeAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAyAJIDAREAAhEBAxEB/8QA
        HQABAAMBAQEAAwAAAAAAAAAAAAcICQYEBQECA//EADMQAAIBAwQCAQMDAgUFAQAAAAECAwQFBgAHCBES
        ITEJEyIUQVEVMhYjUmFxQkNigaHw/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAA
        AAAAAAD/2gAMAwEAAhEDEQA/ANU9A0HxcyzOx7eYvcsjyS6U1msduhM9VXVb+McSD+f5JPQAHZJIABJA
        0GOvID6uGe5FvNa7ptlIbFg9hqS0FvrIwTeR7Vmqx8hGUnxRSCvYbvyAKhpzxV5XYfyw29jyDHJhSXWm
        Cx3axzuDUUExHwf9UbdErIB0wB+GDKAmvQNA0DQNA0DQNA0DQNA0DQNA0HKbobo4xs1hFyy3MLtDZrFb
        085aiY+2P/SiKPbux9BR2SdBhFza505Py3yg0sX3rFt9QTFrbYg/uQjsCoqCPTykfA9qgPS9kszBAe3O
        3GSbtZnbMUxK0z3q/XGT7dPSU49n+WYn0qqOyWJAABJIGg3b4McFbFxFxiSvq5o71uFdacR3O7J39qFO
        w36anB+IwwBLEeTkAnoAKoWp0Hwsvz3GdvrcLhlORWnGqAnoVV3roqSIn+PKRgP/ALoPNhe5uHbk08s+
        I5ZY8pgiPUktluUNYqf8mNmA0HTaBoGgaBoGgaCvm7923b213qxzMrdeaW7bJNTvDlVmrBR0rWNFUn+o
        pO/hJIi9dtH5MQA3ireQ8A/PHzm7t/yOymqx2x0d/sN2WiFzoYMkoVpDdKMuyfqaXqRvuRhl+T0ffx6P
        QWC0DQR/vjvrh/Hfb+uy/NLmtBbaf8IoU6aermIJWGFOx5u3Xx8AAkkAEgMFOXnMbMOW+bm4Xh2teMUT
        sLRj0MhMNKh9ebn19yUj+5yP9gAPWgjrZjZbLt/c+t+H4Xa3ud3qz2x/thpogR5TTP8ACRr2Oyf5AAJI
        BDefhzwtxHiNhv6egVLxmFfGou2Qyx9STH5+1EP+3CD8L8kgFuz10FidA0GSnFvaq0/Uq5Bbqbk7r1lf
        e8XslVFTWewxVckEKwytJ9qPtCGREjiXsIVLvIWJ777Dyc39hbJ9PXcLbTdzZaWsxxZa96Wrsr1ss0Un
        gFkKechZzHInmjqzEf2kfvoLc5vzGymw869utmbdarPJiOS2mO4VFbUwymvRnjqXARhKEA/yU9FG+W9/
        HQf33E5d5ZiHPrA9jqS12abFb9bRV1NbNFKa5JDHUt+DiQIF7gT0UJ9n38dByW7XJLlzFm2WwbbbC2uT
        EMfraimW6ZHMRJcIomIFRCpqYCUcL5DxV/RHvvQcVefqW55kHDOLeXDMSsUV4s+RLY8lt10Seop4UaMM
        k8JSWNgrNJCvTE9FyPfXkQljljzmqtpuOu3ue7d26332+53UUi2ihuccksf2pIvuOSkbxuWUlI+gR0zj
        v460Fo2kyL/BBcR0Ayz+neQjIY0n637Xx15eX2/uf+Xfj+/fvQVb4X84bjvps3uPk24dutlgv+Bzzvdq
        W1pJFElKkLSByksjsrdxTqe26/y+/XsAIcpfqIXK98MrxuJu1t9jWQx5Bf3sOO4rT0zmmuCxortJUidp
        QyI6sOwvtkA8R2GAePH+U+4+0u6u19RyF48YdiFkuLrasayG0UMS1dkjcBPFSZZjEoWQBoh9pvHy6U9F
        dBphoGgpl9Rfg1W8rMYob/jFznhzbH6d0o7ZU1JFFXRE+TRhSfGKUn4kHQboK/oKyBhpkGPXPE75XWa8
        0FRa7tQzNT1VFVxmOWGRT0ysp9gg6C1308ebtNxMzGutmQ2mCswvIJY/6hXU1OprqJ19LKrAeUkY7PcR
        PrssnR7Dhuti+UWjNset9+sNxprvZrhCtRS1tJIHimjPwykf/h8aD6mgaDI7avOcj+ldvnuRaM0we83f
        a3I6paigvNmgVlVEeQwMjMVjJ8JCjxsykFQR6/uDj+WXKm088dztpcTWiq9uNsjcnZ8gyrxp/wBQWKLK
        /kpZFCIPEdOR5SjyKjo6CY+d1zn48839nt+mx+uvW31FZ4qSeptYDorqalCqt/Yp+1UxMgZgHIYAjokB
        x9m3bruQP1RdnM9XC73iNhr6KSG0LfIhHUVtNFT1fdT4DsKpZ2HpmH49+R79BEu5F9tVw343VtHI7Fty
        syzWouk0eI2q0VBSmVPOUIqIWB+0R9rwMSuCoPrs9kLEfTH2gj3R4Z737dXyFqRrpe6q2SiVfyppxSQh
        W66P5RyBW+D7UaCBuEFgyzfDkvtRtpl1Ky2jZhrlXTU0xLPDIlV5+D9+vVSadOv9Kdft6DbnQYkc2WyL
        i/yR3vxLGqKZrNu9bIJoY4VbstNUxySlFA/MmRayEKP2n/kdaCeOc3D/ACPH+FWy1pxezVd6qNvlX+sU
        VpUtOxnjVqqoRVVj0J1JJAJUSeRBCkgK9YXFsZvLnmHY9Z6HkNmGQ/1ilSegvV1oZaSg7mVZJWZIJH8U
        HkW/CP0p7ZfkBuJoGgaCofOzgBYOVdjlv1kFPYdzKOHxprkV8Yq9VH4wVPQ9j9lk9lf919aDDHOsEv8A
        tnltzxjKLVUWW+22Uw1VFVL06N+x/gqR0Qw7BBBBIIOgsjwb57ZHxNyJLVcf1F+23rpvKus/l3JSsfmo
        puz0r/ynpX699HpgG6u3e4uObsYbbMqxO7U96sNxjEtPV07dgj91YH2rA9gqQCCCCARoOk0DQR/vZsPh
        HIbDZMYzuxw3m2lvuwuSUnppOuhJFIPyRuvXYPsdgggkaD2bM7T2fY3bKw4Lj89bU2ezRNDTS3CRZJyr
        SM/5MqqD7cj0B660HaaBoP0mMgif7QUy+J8A56Un9u/9tBUrgzxDy7j9km5mabj3iz33N8zrxUS1Fllm
        lhjj83lf8pY0bt5JCSOiAET386C3GgaBoGgaBoGgaCtPNLhBivLnEvKT7VkzqgiK2u/rH7/ciCcD28RP
        /tCSV+WVgwf3V2gy3ZXPq/DMus89rv1I4UwEeSzKT+EkTD06N+zD5/5BGg2H+ljxQz3YDCLnkeaXeutn
        +JI0kgwxiPtUo9EVE6kdrOygDxXrxX0/bdBAvfoGgaBoGgaBoGgaBoGgaBoGgaBoGgg7e/ELFfN7dja+
        5WW3XCuprzWiCqqqSOWWLxoJ5F8WYEr06I46+GVT8gaCcdA0DQNA0DQNA0DQNA0DQNA0DQf/2Q==
</value>
  </data>
</root>